{namespace LexiconDropdown}

/**
 * This renders an icon element based on the lexicon icon definition
 * found at http://liferay.github.io/lexicon/content/dropdowns/
 *
 * @param? alignedPosition
 * @param? classMap
 * @param? elementClasses
 * @param? expanded
 * @param items
 * @param? position
 * @param? positionClassOnMenu
 * @param? toggle
 */
{template .render}
	{let $dropdownTrigger kind="html"}
		{call .trigger data="all" /}
	{/let}

	{call Dropdown.render data="all"}
		{param body kind="html"}
			{call .dropdownItems data="all"}
				{param items: $items /}
			{/call}
		{/param}

		{param elementClasses: $elementClasses ?: 'dropdown' /}
		{param header: $dropdownTrigger /}
	{/call}
{/template}

/**
 *
 * @param? toggle
 * @param? trigger
 */
{template .trigger}
	{let $buttonClasses kind="text"}
		dropdown-toggle{$trigger and $trigger.elementClasses ? ' ' + $trigger.elementClasses : ''}
	{/let}

	{call LexiconButton.render data="all"}
		{param elementClasses: $buttonClasses /}
		{param events: ['click': $toggle] /}
		{param href: $trigger and $trigger.anchor ? 'javascript:;' : null /}

		{param label kind="html"}
			{if $trigger and $trigger.label}
				{$trigger.label + ' '}
			{/if}

			<span class="icon-caret-down"></span>
		{/param}
	{/call}
{/template}

/**
 *
 * @param items
 */
{template .dropdownItems}
	{foreach $item in $items}
		{delcall LexiconDropdown.item variant="$item.type" data="all" }
			{param item: $item /}
		{/delcall}
	{/foreach}
{/template}

/**
 *
 * @param item
 */
{deltemplate LexiconDropdown.item}
	<li class="{$item.active ? 'active' : ''}{$item.disabled ? 'disabled' : ''}{$item.cssClass ? ' ' + $item.cssClass : ''}">
		<a class="{$item.linkCssClass ?: ''}" href="{$item.href}">{$item.label}</a>
	</li>
{/deltemplate}

/**
 *
 * @param item
 */
{deltemplate LexiconDropdown.item variant="'divider'"}
	<li class="divider{$item.cssClass ? ' ' + $item.cssClass : ''}" role="presentation"></li>
{/deltemplate}

/**
 *
 * @param item
 */
{deltemplate LexiconDropdown.item variant="'header'"}
	<li class="dropdown-header{$item.cssClass ? ' ' + $item.cssClass : ''}" role="presentation">{$item.label}</li>
{/deltemplate}

/**
 *
 * @param item
 */
{deltemplate LexiconDropdown.item variant="'scroller'"}
	<li>
		<ul class="inline-scroller">
			{call .dropdownItems data="all"}
				{param items: $item.items /}
			{/call}
		</ul>
	</li>
{/deltemplate}